% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pro_query.R
\name{pro_query}
\alias{pro_query}
\title{Build an OpenAlex request (httr2)}
\usage{
pro_query(
  entity = c("works", "authors", "venues", "institutions", "concepts", "publishers",
    "funders"),
  id = NULL,
  multiple_id = FALSE,
  search = NULL,
  group_by = NULL,
  select = NULL,
  options = NULL,
  endpoint = "https://api.openalex.org",
  mailto = NULL,
  user_agent = NULL,
  ...
)
}
\arguments{
\item{entity}{Character; one of \code{"works"}, \code{"authors"}, \code{"venues"},
\code{"institutions"}, \code{"concepts"}, \code{"publishers"}, \code{"funders"}.}

\item{id}{Optional single ID (e.g., \code{"W1775749144"}) to fetch one entity.}

\item{multiple_id}{Logical; if \code{TRUE} and \code{id} is a vector, the IDs are
moved into the \code{ids.openalex} filter and \code{id} is cleared.}

\item{search}{Optional full-text search string.}

\item{group_by}{Optional field to group by (facets), e.g. \code{"type"}.}

\item{select}{Optional character vector of fields to return.}

\item{options}{Optional named list of additional query parameters (e.g.,
\code{list(per_page = 200, sort = "cited_by_count:desc", cursor = "*", sample = 100)}).}

\item{endpoint}{Base API URL. Defaults to \code{"https://api.openalex.org"}.}

\item{mailto}{Optional email to join the polite pool; added as a query parameter and
appended to the \code{User-Agent}.}

\item{user_agent}{Optional custom \code{User-Agent}.}

\item{...}{Filters as named arguments. Values may be scalars or vectors (vectors
are collapsed with \code{"|"} to express OR).}
}
\value{
An \code{httr2} request object, ready for \code{api_call()}.
}
\description{
Construct an \code{httr2} request for the OpenAlex API. All filters must be
supplied as named \code{...} arguments (e.g., \code{from_publication_date = "2020-01-01"}).
}
\details{
Filter names are validated via \code{.validate_filter()} using
\code{opt_filter_names()}. \code{select} fields are validated via
\code{.validate_select()} using \code{`opt_select_fields()`}.
}
\examples{
\dontrun{

req <- oa_build_req(
  entity = "works",
  search = "biodiversity",
  from_publication_date = "2020-01-01",
  language = c("en","de"),
  select = c("id","title","publication_year"),
  options = list(per_page = 5),
  mailto = "you@example.org"
)
# resp <- api_call(req)
# httr2::resp_body_json(resp)
}

}
