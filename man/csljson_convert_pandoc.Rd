% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corpus_csl_pandoc.R
\name{csljson_convert_pandoc}
\alias{csljson_convert_pandoc}
\title{Convert CSL JSON (file or directory) via Pandoc}
\usage{
csljson_convert_pandoc(
  csljson,
  output,
  to = c("biblatex", "bibtex", "docx", "markdown", "latex", "html", "pdf"),
  from = "csljson",
  overwrite = FALSE,
  verbose = TRUE,
  references_csl = NULL,
  pdf_engine = "xelatex",
  pdf_mainfont = NULL,
  pdf_sansfont = NULL,
  pdf_monofont = NULL,
  pdf_cjk_mainfont = NULL,
  pdf_cjk_options = NULL
)
}
\arguments{
\item{csljson}{Path to a CSL JSON file (array) or a directory created by
\code{corpus_to_csljson()} containing \code{chunk_*.json} files.}

\item{output}{Output path. For \verb{bib*} with a file input, this is the target
\code{.bib} file (extension added if missing). For \verb{bib*} with a directory
input, this is the output directory. For formatted references (\code{docx},
\code{markdown}, \code{latex}, \code{pdf}), this is the output file (file input) or the
output directory (dir input; file will be \verb{references.<ext>} within).}

\item{to}{One of \code{"biblatex"}, \code{"bibtex"}, \code{"docx"}, \code{"markdown"},
\code{"latex"}, \code{"html"}, or \code{"pdf"}.}

\item{from}{Source format; defaults to "csljson".}

\item{overwrite}{Logical; overwrite existing output file(s). Defaults to FALSE.}

\item{verbose}{Print progress messages.}

\item{references_csl}{Optional path to a CSL style file (e.g., apa.csl). If
NULL, Pandoc's default style is used.}
}
\value{
Invisibly returns the created file path(s).
}
\description{
Converts CSL JSON with Pandoc into one of: BibTeX, BibLaTeX, Docx, Markdown,
LaTeX, or PDF. Behavior depends on \code{to}:
\itemize{
\item \code{bibtex}/\code{biblatex}: creates bibliography files. For a directory of chunks,
writes \code{chunk_*.bib} into the directory given by \code{output}. For a single
file, writes the specified \code{output} (appends \code{.bib} if missing).
\item \code{docx}/\code{markdown}/\code{latex}/\code{pdf}: renders a formatted references document
using citeproc. For a directory of chunks, writes \verb{references.<ext>} inside
\code{output}. For a single file, writes to \code{output} (appends extension if
missing).
}
}
\details{
Requires Pandoc to be available. In RStudio, a bundled Pandoc is
usually available; otherwise install Pandoc and ensure it is on PATH.
}
