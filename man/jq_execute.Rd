% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jq_execute.R
\name{jq_execute}
\alias{jq_execute}
\title{Execute a jq transformation from an OpenAlex-style JSON to JSONL}
\usage{
jq_execute(
  input_json,
  output_jsonl,
  jq_path = "jq",
  jq_filter = NULL,
  page = NULL,
  type = c("results", "single")
)
}
\arguments{
\item{input_json}{Path to the input JSON file}

\item{output_jsonl}{Path to the output .jsonl file}

\item{jq_path}{Path to the jq executable (default: "jq")}

\item{jq_filter}{Optional custom jq filter string. If NULL, the default filter is used.}

\item{page}{Optional integer to be added as a "page" field in each output record}

\item{type}{Either "results" (default, expects a .results[] array) or "single" (treat input as array of records directly)}
}
\value{
Invisibly returns the output path
}
\description{
This function runs a jq filter to extract records from the "results" array (or from the root
if type = "single"), reconstruct the abstract text, generate a citation string, and optionally
add a page field. It writes the result as newline-delimited JSON (.jsonl), suitable for Arrow or DuckDB.
}
\details{
For details on the jq filter logic, see the vignette: `vignette("jq", package = "yourpackagename")`
}
