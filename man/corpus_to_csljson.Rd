% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corpus_csl_pandoc.R
\name{corpus_to_csljson}
\alias{corpus_to_csljson}
\title{Convert a corpus to CSL JSON (chunked)}
\usage{
corpus_to_csljson(
  corpus,
  output,
  chunk_size = 10000,
  overwrite = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{corpus}{Path to parquet dataset, parquet Dataset/Table (e.g., from \code{arrow::open_dataset()}) or
a data.frame/tibble (e.g., from \code{dplyr::collect()}).}

\item{output}{Path to a directory to create and populate with chunked CSL
JSON files (\code{chunk_1.json}, \code{chunk_2.json}, ...).}

\item{chunk_size}{Rows processed per chunk via DuckDB. Default: 10000.}

\item{overwrite}{Overwrite \code{output} if it exists. Default: FALSE.}

\item{verbose}{Print progress messages. Default: TRUE.}
}
\value{
Invisibly returns \code{normalizePath(output)}.
}
\description{
Maps an OpenAlex corpus (Arrow Dataset/Table or data.frame/tibble) to CSL
JSON items and writes them into chunked files. The function creates the
directory \code{output} (if not present) and writes files \code{chunk_1.json},
\code{chunk_2.json}, ... inside that directory.
}
